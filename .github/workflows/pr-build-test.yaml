name: PR Build Test

on:
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

env:
  SLACK_START_COLOR: "#6366f1"
  SLACK_SUCCESS_COLOR: "#22c55e"
  SLACK_FAILURE_COLOR: "#ef4444"
  SLACK_COMMON_FIELDS: |
    {
      "title": "PR 제목",
      "value": "${{ github.event.pull_request.title }}",
      "short": true
    },
    {
      "title": "워크플로우",
      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/workflows/pr-build-test.yaml|${{ github.workflow }} 워크플로우>",
      "short": true
    },
    {
      "title": "액션작업",
      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|#${{ github.run_number }} 작업>",
      "short": true
    },
    {
      "title": "PR 브랜치",
      "value": "${{ format('{0} → {1}', github.event.pull_request.head.ref, github.event.pull_request.base.ref) }}",
      "short": true
    }

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: always()
    steps:
    - uses: actions/checkout@v3

    # 시작 시간 설정
    - name: Set start time
      run: |
        echo "TZ='Asia/Seoul'" >> $GITHUB_ENV
        echo "START_TIME=$(TZ='Asia/Seoul' date +%s)" >> $GITHUB_ENV
        echo "START_TIME_FORMATTED=$(TZ='Asia/Seoul' date '+%Y년 %m월 %d일 %H시 %M분 %S초')" >> $GITHUB_ENV

    # 빌드 시작 알림
    - name: Notify Slack on Start
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "attachments": [
              {
                "color": "${{ env.SLACK_START_COLOR }}",
                "title": "🔨 PR 빌드 테스트 시작 🔨",
                "text": "${{ format('{0} → {1}', github.event.pull_request.head.ref, github.event.pull_request.base.ref) }}",
                "fields": [
                  {
                    "title": "시작시간",
                    "value": "${{ env.START_TIME_FORMATTED }}",
                    "short": true
                  },
                  ${{ env.SLACK_COMMON_FIELDS }}
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: Create Frontend env files
      run: |
        mkdir -p ./envs/fe
        mkdir -p ./apps/fe
        echo "${{ secrets.FRENTEND_ENV_FILE }}" > ./envs/fe/.env.production
        echo "${{ secrets.FRENTEND_ENV_FILE }}" > ./apps/fe/.env.production

    - name: Create Backend env files
      run: |
        mkdir -p ./envs/be
        mkdir -p ./apps/be
        echo "${{ secrets.BACKEND_ENV_FILE }}" > ./envs/be/.env.production
        echo "${{ secrets.BACKEND_ENV_FILE }}" > ./apps/be/.env.production

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Docker LogIn
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build Test
      run: |
        docker buildx create --use
        DOCKER_DEFAULT_PLATFORM=linux/arm64 docker-compose build

    # 액션 총 소요시간 계산
    - name: Calculate duration
      if: always()
      run: |
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        MINUTES=$((DURATION / 60))
        SECONDS=$((DURATION % 60))
        echo "DURATION=${MINUTES}분 ${SECONDS}초" >> $GITHUB_ENV

    # 빌드 성공 알림
    - name: Notify Slack on Success
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "attachments": [
              {
                "color": "${{ env.SLACK_SUCCESS_COLOR }}",
                "title": "⭕️ PR 빌드 테스트 성공 ⭕️",
                "text": "${{ format('{0} → {1}', github.event.pull_request.head.ref, github.event.pull_request.base.ref) }}",
                "fields": [
                  {
                    "title": "소요시간",
                    "value": "${{ env.DURATION }}",
                    "short": true
                  },
                  ${{ env.SLACK_COMMON_FIELDS }}
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    # 빌드 실패 알림
    - name: Notify Slack on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "attachments": [
              {
                "color": "${{ env.SLACK_FAILURE_COLOR }}",
                "title": "❌ PR 빌드 테스트 실패 ❌",
                "text": "${{ format('{0} → {1}', github.event.pull_request.head.ref, github.event.pull_request.base.ref) }}",
                "fields": [
                  {
                    "title": "소요시간",
                    "value": "${{ env.DURATION }}",
                    "short": true
                  },
                  ${{ env.SLACK_COMMON_FIELDS }}
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK 